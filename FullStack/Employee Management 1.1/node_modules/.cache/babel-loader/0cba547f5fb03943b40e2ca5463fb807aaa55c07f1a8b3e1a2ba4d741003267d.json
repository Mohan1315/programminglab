{"ast":null,"code":"var _jsxFileName = \"G:\\\\PROGRAMMING\\\\FullStack\\\\Employee Management 1.1\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport LoginPage from './pages/LoginPage';\nimport Dashboard from './pages/Dashboard';\nimport EmployeeList from './pages/EmployeeList';\nimport EmployeeProfile from './pages/EmployeeProfile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [userRole, setUserRole] = useState(null);\n\n  // Dummy employee data\n  const employeeData = {\n    id: 1,\n    name: 'John Doe',\n    department: 'Engineering',\n    status: 'Active',\n    skills: ['JavaScript', 'React', 'Node.js']\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        userRole: userRole,\n        setUserRole: setUserRole\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(LoginPage, {\n            setUserRole: setUserRole\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/dashboard\",\n          element: userRole === 'admin' ? /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 68\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 84\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/employees\",\n          element: userRole === 'admin' ? /*#__PURE__*/_jsxDEV(EmployeeList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 68\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 87\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile\",\n          element: /*#__PURE__*/_jsxDEV(EmployeeProfile, {\n            userRole: userRole,\n            employeeData: employeeData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"C6bAPncfcaG2nuSIoL1CZL5BCqc=\");\n_c = App;\nexport default App;\n\n/*\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport LoginPage from './pages/LoginPage';\nimport Dashboard from './pages/Dashboard';\nimport EmployeeList from './pages/EmployeeList';\n\nfunction App() {\n  const [userRole, setUserRole] = useState(null); // Track the user's role\n\n  return (\n    <Router>\n      <div>\n        <Navbar />\n        <Routes>\n          <Route path=\"/\" element={<LoginPage setUserRole={setUserRole} />} />\n          <Route path=\"/dashboard\" element={userRole === 'admin' ? <Dashboard /> : <Navigate to=\"/\" />} />\n          <Route path=\"/employees\" element={userRole === 'admin' ? <EmployeeList /> : <Navigate to=\"/\" />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n\n/*\n\ncode version 1.1\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport LoginPage from './pages/LoginPage';\nimport Dashboard from './pages/Dashboard';\nimport EmployeeList from './pages/EmployeeList';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Navbar />\n        <Routes>\n          <Route path=\"/\" element={<LoginPage />} />\n          <Route path=\"/dashboard\" element={<Dashboard />} />\n          <Route path=\"/employees\" element={<EmployeeList />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\ncode version 1.0\nimport React, { useState } from 'react';\n\nfunction LoginPage() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    // Implement login logic here (e.g., check credentials)\n    if (username === 'admin' && password === 'admin') {\n      window.location.href = '/dashboard'; // Redirect to the dashboard\n    } else if (username === 'employee' && password === 'employee') {\n      window.location.href = '/employees'; // Redirect to employee profile (to be implemented later)\n    } else {\n      alert('Invalid credentials');\n    }\n  };\n\n  return (\n    <div>\n      <h1>Login Page</h1>\n      <form onSubmit={handleLogin}>\n        <div>\n          <label>Username:</label>\n          <input\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </div>\n        <div>\n          <label>Password:</label>\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  );\n}\n\nexport default LoginPage;\n*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","Navigate","Navbar","LoginPage","Dashboard","EmployeeList","EmployeeProfile","jsxDEV","_jsxDEV","App","_s","userRole","setUserRole","employeeData","id","name","department","status","skills","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","_c","$RefreshReg$"],"sources":["G:/PROGRAMMING/FullStack/Employee Management 1.1/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport LoginPage from './pages/LoginPage';\nimport Dashboard from './pages/Dashboard';\nimport EmployeeList from './pages/EmployeeList';\nimport EmployeeProfile from './pages/EmployeeProfile';\n\nfunction App() {\n  const [userRole, setUserRole] = useState(null);\n\n  // Dummy employee data\n  const employeeData = {\n    id: 1,\n    name: 'John Doe',\n    department: 'Engineering',\n    status: 'Active',\n    skills: ['JavaScript', 'React', 'Node.js'],\n  };\n\n  return (\n    <Router>\n      <div>\n      <Navbar userRole={userRole} setUserRole={setUserRole} />\n\n        <Routes>\n          <Route path=\"/\" element={<LoginPage setUserRole={setUserRole} />} />\n          <Route path=\"/dashboard\" element={userRole === 'admin' ? <Dashboard /> : <Navigate to=\"/\" />} />\n          <Route path=\"/employees\" element={userRole === 'admin' ? <EmployeeList /> : <Navigate to=\"/\" />} />\n          <Route\n            path=\"/profile\"\n            element={<EmployeeProfile userRole={userRole} employeeData={employeeData} />}\n          />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n\n\n\n\n/*\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport LoginPage from './pages/LoginPage';\nimport Dashboard from './pages/Dashboard';\nimport EmployeeList from './pages/EmployeeList';\n\nfunction App() {\n  const [userRole, setUserRole] = useState(null); // Track the user's role\n\n  return (\n    <Router>\n      <div>\n        <Navbar />\n        <Routes>\n          <Route path=\"/\" element={<LoginPage setUserRole={setUserRole} />} />\n          <Route path=\"/dashboard\" element={userRole === 'admin' ? <Dashboard /> : <Navigate to=\"/\" />} />\n          <Route path=\"/employees\" element={userRole === 'admin' ? <EmployeeList /> : <Navigate to=\"/\" />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n\n/*\n\ncode version 1.1\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport LoginPage from './pages/LoginPage';\nimport Dashboard from './pages/Dashboard';\nimport EmployeeList from './pages/EmployeeList';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Navbar />\n        <Routes>\n          <Route path=\"/\" element={<LoginPage />} />\n          <Route path=\"/dashboard\" element={<Dashboard />} />\n          <Route path=\"/employees\" element={<EmployeeList />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\ncode version 1.0\nimport React, { useState } from 'react';\n\nfunction LoginPage() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    // Implement login logic here (e.g., check credentials)\n    if (username === 'admin' && password === 'admin') {\n      window.location.href = '/dashboard'; // Redirect to the dashboard\n    } else if (username === 'employee' && password === 'employee') {\n      window.location.href = '/employees'; // Redirect to employee profile (to be implemented later)\n    } else {\n      alert('Invalid credentials');\n    }\n  };\n\n  return (\n    <div>\n      <h1>Login Page</h1>\n      <form onSubmit={handleLogin}>\n        <div>\n          <label>Username:</label>\n          <input\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </div>\n        <div>\n          <label>Password:</label>\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  );\n}\n\nexport default LoginPage;\n*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}